---
# THIS FILE WAS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT.
#
# Generated on 2021-03-30T12:47:15Z by kres 3971480.

kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: setup-ci
  pull: always
  image: autonomy/build-container:latest
  commands:
  - sleep 5
  - git fetch --tags
  - install-ci-key
  - docker buildx create --driver docker-container --platform linux/amd64 --name local --use unix:///var/outer-run/docker.sock
  - docker buildx inspect --bootstrap
  environment:
    SSH_KEY:
      from_secret: ssh_key
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh

- name: js
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make js
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - setup-ci

- name: unit-tests-frontend
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-frontend
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - js

- name: frontend
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make frontend
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - js

- name: base
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make base
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - setup-ci
  - frontend

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - base

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - base

- name: coverage
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make coverage
  environment:
    CODECOV_TOKEN:
      from_secret: CODECOV_TOKEN
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - unit-tests

- name: theila
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make theila
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - base

- name: lint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - base

- name: image-theila
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-theila
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  depends_on:
  - theila
  - lint
  - unit-tests

- name: push-theila
  pull: always
  image: autonomy/build-container:latest
  commands:
  - docker login ghcr.io --username "$${GHCR_USERNAME}" --password "$${GHCR_PASSWORD}"
  - make image-theila
  environment:
    GHCR_PASSWORD:
      from_secret: ghcr_token
    GHCR_USERNAME:
      from_secret: ghcr_username
    PUSH: true
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - image-theila

- name: push-theila-latest
  pull: always
  image: autonomy/build-container:latest
  commands:
  - docker login ghcr.io --username "$${GHCR_USERNAME}" --password "$${GHCR_PASSWORD}"
  - make image-theila TAG=latest
  environment:
    GHCR_PASSWORD:
      from_secret: ghcr_token
    GHCR_USERNAME:
      from_secret: ghcr_username
    PUSH: true
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh
  when:
    branch:
    - master
    event:
      exclude:
      - pull_request
  depends_on:
  - push-theila

services:
- name: docker
  image: docker:19.03-dind
  entrypoint:
  - dockerd
  commands:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1500
  - --log-level=error
  privileged: true
  volumes:
  - name: outer-docker-socket
    path: /var/outer-run
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh

volumes:
- name: outer-docker-socket
  host:
    path: /var/ci-docker
- name: docker-socket
  temp:
    medium: memory
- name: buildx
  temp:
    medium: memory
- name: ssh
  temp:
    medium: memory

---
kind: pipeline
type: kubernetes
name: notify

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: slack
  image: plugins/slack
  settings:
    channel: proj-talos-maintainers
    link_names: true
    template: "{{#if build.pull }}\n*{{#success build.status}}✓ Success{{else}}✕ Fail{{/success}}*: {{ repo.owner }}/{{ repo.name }} - <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>\n{{else}}\n*{{#success build.status}}✓ Success{{else}}✕ Fail{{/success}}: {{ repo.owner }}/{{ repo.name }} - Build #{{ build.number }}* (type: `{{ build.event }}`)\n{{/if}}\nCommit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>\nBranch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>\nAuthor: {{ build.author }}\n<{{ build.link }}|Visit build page>"
    webhook:
      from_secret: slack_webhook
  when:
    status:
    - success
    - failure

trigger:
  status:
  - success
  - failure

depends_on:
- default

...
